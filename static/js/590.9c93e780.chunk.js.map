{"version":3,"file":"static/js/590.9c93e780.chunk.js","mappings":"2QAGaA,GAAmBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,ocAoBhBE,EAAwBF,EAAAA,GAAAA,GAAH,sHAOrBG,EAAoBH,EAAAA,GAAAA,IAAH,wCAIjBI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kZAoBVM,EAAaN,EAAAA,GAAAA,IAAH,wEAMVO,EAAcP,EAAAA,GAAAA,OAAH,wdAqBXQ,GAAuBR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,uC,SCnE3BU,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIC,WAClCP,MAAOG,EAAAA,KAAaI,WACpBN,SAAUE,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIC,aAsCxC,EAnCyB,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACEX,cAAeA,EACfY,iBAAkBR,EAClBS,SATiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,EAASM,EAAAA,EAAAA,SAAwBF,IACjCC,GACD,EAGC,UAKE,UAAC1B,EAAD,YACE,SAACG,EAAD,iCACA,UAACC,EAAD,YACE,SAACC,EAAD,CAAYuB,KAAK,OAAOhB,KAAK,OAAOiB,YAAY,UAChD,SAACpB,EAAD,CAAsBG,KAAK,aAE7B,UAACR,EAAD,YACE,SAACC,EAAD,CAAYuB,KAAK,QAAQhB,KAAK,QAAQiB,YAAY,WAClD,SAACpB,EAAD,CAAsBG,KAAK,cAE7B,UAACR,EAAD,YACE,SAACC,EAAD,CAAYuB,KAAK,WAAWhB,KAAK,WAAWiB,YAAY,cACxD,SAACpB,EAAD,CAAsBG,KAAK,iBAE7B,SAACL,EAAD,WACE,SAACC,EAAD,CAAaoB,KAAK,SAAlB,gCAKT,EChDD,EARyB,WACvB,OACE,SAACE,EAAA,EAAD,WACE,SAAC,EAAD,KAGL,C","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormRegistration = styled(Form)`\n  max-width: 700px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  gap: 20px;\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  margin-top: 150px;\n`;\n\nexport const FormRegistrationTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--color);\n`;\n\nexport const FeedbackFormGroup = styled.div`\n  width: 100%;\n`;\n\nexport const InputValue = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  height: 30px;\n  padding: 5px;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  outline: none;\n\n  &::placeholder {\n    opacity: 0.4;\n    color: var(--color);\n  }\n`;\n\nexport const Btnwrapper = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BtnRegister = styled.button`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 30px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  color: var(--color);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const ErrorRegisterMassege = styled(ErrorMessage)`\n  color: red;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/auth-operation';\nimport {\n  FormRegistration,\n  FormRegistrationTitle,\n  FeedbackFormGroup,\n  InputValue,\n  Btnwrapper,\n  BtnRegister,\n  ErrorRegisterMassege,\n} from './RegistrationForm.styled.js';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().min(7).max(20).required(),\n  email: yup.string().required(),\n  password: yup.string().min(5).max(20).required(),\n});\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(authOperations.register(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormRegistration>\n        <FormRegistrationTitle>Form Registration</FormRegistrationTitle>\n        <FeedbackFormGroup>\n          <InputValue type=\"text\" name=\"name\" placeholder=\"name\" />\n          <ErrorRegisterMassege name=\"name\" />\n        </FeedbackFormGroup>\n        <FeedbackFormGroup>\n          <InputValue type=\"email\" name=\"email\" placeholder=\"email\" />\n          <ErrorRegisterMassege name=\"email\" />\n        </FeedbackFormGroup>\n        <FeedbackFormGroup>\n          <InputValue type=\"password\" name=\"password\" placeholder=\"password\" />\n          <ErrorRegisterMassege name=\"password\" />\n        </FeedbackFormGroup>\n        <Btnwrapper>\n          <BtnRegister type=\"submit\">Registration</BtnRegister>\n        </Btnwrapper>\n      </FormRegistration>\n    </Formik>\n  );\n};\n\nexport default RegistrationForm;\n","import Container from 'components/Container/Container';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\n\nconst RegistrationPage = () => {\n  return (\n    <Container>\n      <RegistrationForm />\n    </Container>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["FormRegistration","styled","Form","FormRegistrationTitle","FeedbackFormGroup","InputValue","Field","Btnwrapper","BtnRegister","ErrorRegisterMassege","ErrorMessage","initialValues","name","email","password","schema","yup","shape","min","max","required","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","authOperations","type","placeholder","Container"],"sourceRoot":""}