{"version":3,"file":"static/js/423.c819ee6e.chunk.js","mappings":"wSAGaA,GAAwBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,ocAoBrBE,EAA6BF,EAAAA,GAAAA,GAAH,sHAO1BG,EAAyBH,EAAAA,GAAAA,IAAH,wCAItBI,GAAkBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kZAoBfM,EAAkBN,EAAAA,GAAAA,IAAH,wEAMfO,EAAmBP,EAAAA,GAAAA,OAAH,wdAqBhBQ,GAA4BR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,uC,uCChEhCU,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaE,WACpBJ,SAAUE,EAAAA,KAAaG,IAAI,GAAGC,IAAI,IAAIF,aA4CxC,EA1CkB,WAChB,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,UAE7BC,EAAAA,EAAAA,YAAU,WACJH,GACFI,EAAAA,GAAAA,QAAA,aAAoBJ,GAEvB,GAAE,CAACA,IAEJ,IAAMK,EAAY,mCAAG,WAAOC,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,SACbT,EAASU,EAAAA,EAAAA,MAAqBF,IADjB,OAEnBC,IAFmB,2CAAH,wDAIlB,OACE,SAAC,KAAD,CACElB,cAAeA,EACfoB,iBAAkBjB,EAClBkB,SAAUL,EAHZ,UAKE,UAAC3B,EAAD,YACE,SAACG,EAAD,2BACA,UAACC,EAAD,YACE,SAACC,EAAD,CAAiB4B,KAAK,QAAQC,KAAK,QAAQC,YAAY,WACvD,SAAC1B,EAAD,CAA2ByB,KAAK,cAElC,UAAC9B,EAAD,YACE,SAACC,EAAD,CACE4B,KAAK,WACLC,KAAK,WACLC,YAAY,cAEd,SAAC1B,EAAD,CAA2ByB,KAAK,iBAElC,SAAC3B,EAAD,WACE,SAACC,EAAD,CAAkByB,KAAK,SAAvB,0BAKT,ECxDD,EARkB,WAChB,OACE,SAACG,EAAA,EAAD,WACE,SAAC,EAAD,KAGL,C","sources":["components/LogInForm/LoginForm.styled.js","components/LogInForm/LoginForm.jsx","pages/LogInPage/LogInPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormRegistrationLogin = styled(Form)`\n  max-width: 700px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  gap: 20px;\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  margin-top: 150px;\n`;\n\nexport const FormRegistrationTitleLogin = styled.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--color);\n`;\n\nexport const FeedbackFormGroupLogin = styled.div`\n  width: 100%;\n`;\n\nexport const InputValueLogin = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  height: 30px;\n  padding: 5px;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  outline: none;\n\n  &::placeholder {\n    opacity: 0.3;\n    color: var(--color);\n  }\n`;\n\nexport const BtnwrapperLogin = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BtnRegisterLogin = styled.button`\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 30px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: transparent;\n  border: 1px solid var(--border-color);\n  color: var(--color);\n  border-radius: 5px;\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  -ms-border-radius: 5px;\n  -o-border-radius: 5px;\n  cursor: pointer;\n`;\n\nexport const ErrorRegisterMassegeLogin = styled(ErrorMessage)`\n  color: red;\n`;\n","import { Formik } from 'formik';\nimport authOperations from 'redux/auth/auth-operation';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  FormRegistrationLogin,\n  FormRegistrationTitleLogin,\n  FeedbackFormGroupLogin,\n  InputValueLogin,\n  BtnwrapperLogin,\n  BtnRegisterLogin,\n  ErrorRegisterMassegeLogin,\n} from './LoginForm.styled';\nimport { toast } from 'react-toastify';\nimport authSelector from 'redux/auth/auth-selector';\nimport { useEffect } from 'react';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  email: yup.string().required(),\n  password: yup.string().min(5).max(20).required(),\n});\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const userName = useSelector(authSelector.getName);\n\n  useEffect(() => {\n    if (userName) {\n      toast.success(`Hi ${userName}`);\n    }\n  }, [userName]);\n\n  const handleSubmit = async (values, { resetForm }) => {\n    await dispatch(authOperations.logIn(values));\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormRegistrationLogin>\n        <FormRegistrationTitleLogin>Form Log In</FormRegistrationTitleLogin>\n        <FeedbackFormGroupLogin>\n          <InputValueLogin type=\"email\" name=\"email\" placeholder=\"email\" />\n          <ErrorRegisterMassegeLogin name=\"email\" />\n        </FeedbackFormGroupLogin>\n        <FeedbackFormGroupLogin>\n          <InputValueLogin\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n          />\n          <ErrorRegisterMassegeLogin name=\"password\" />\n        </FeedbackFormGroupLogin>\n        <BtnwrapperLogin>\n          <BtnRegisterLogin type=\"submit\">Log In</BtnRegisterLogin>\n        </BtnwrapperLogin>\n      </FormRegistrationLogin>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import Container from 'components/Container/Container';\nimport LoginForm from 'components/LogInForm/LoginForm';\nconst LogInPage = () => {\n  return (\n    <Container>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default LogInPage;\n"],"names":["FormRegistrationLogin","styled","Form","FormRegistrationTitleLogin","FeedbackFormGroupLogin","InputValueLogin","Field","BtnwrapperLogin","BtnRegisterLogin","ErrorRegisterMassegeLogin","ErrorMessage","initialValues","email","password","schema","yup","shape","required","min","max","dispatch","useDispatch","userName","useSelector","authSelector","useEffect","toast","handleSubmit","values","resetForm","authOperations","validationSchema","onSubmit","type","name","placeholder","Container"],"sourceRoot":""}